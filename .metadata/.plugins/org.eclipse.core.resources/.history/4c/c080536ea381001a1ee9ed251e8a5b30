import static org.junit.jupiter.api.Assertions.*;

import java.util.HashMap;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class ReadingLevelAndDensityChartTest {
	ReadingLevelAndDensityChart bm = new ReadingLevelAndDensityChart();
	HashMap<String, Double[]> ZdataTest;
	
	

	
	

	@BeforeEach
	void setUp() throws Exception {
		
			
		
	}

	@AfterEach
	void tearDown() throws Exception {
	}

	@Test
	void test() {
		HashMap<String, Double[]> ZdataTest = new HashMap<>();
		
		
		Double[] testValues1 = {1.0, 2.0};
		Double[] testValues2 = {2.0, 2.0};
		Double[] testValues3 = {3.0, 2.0};
		Double[] testValues4 = {1.0, 2.0};
		Double[] testValues5 = {2.0, 2.0};
		Double[] testValues6 = {3.0, 2.0};
		Double[] testValues7 = {1.0, 2.0};
		Double[] testValues8 = {2.0, 2.0};
		Double[] testValues9 = {3.0, 2.0};
		Double[] testValues10 = {1.0, 2.0};
		Double[] testValues11 = {2.0, 2.0};
		Double[] testValues12 = {3.0, 2.0};
		Double[] testValues13 = {2.0, 2.0};
		Double[] testValues14 = {2.0, 2.0};
		ZdataTest.put("Source 1", testValues1 );
		ZdataTest.put("Source 2", testValues2 );
		ZdataTest.put("Source 3", testValues3 );
		ZdataTest.put("Source 4", testValues1 );
		ZdataTest.put("Source 5", testValues2 );
		ZdataTest.put("Source 6", testValues3 );
		ZdataTest.put("Source 7", testValues1 );
		ZdataTest.put("Source 8", testValues2 );
		ZdataTest.put("Source 9", testValues3 );
		ZdataTest.put("Source 10", testValues1 );
		ZdataTest.put("Source 11", testValues2 );
		ZdataTest.put("Source 12", testValues3 );
		ZdataTest.put("Source 13", testValues2 );
		ZdataTest.put("Source 14", testValues3 );
		HashMap<String, Double[]> zScores = bm.makeZs(ZdataTest);
		Double[] source2Zs = zScores.get("Source 2"); 
		
		assertEquals(0.0, source2Zs[1]);
		
	}

}
