Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" \r\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>stanford-coreNLP</groupId>\r\n  <artifactId>Team153</artifactId>\r\n  <version>0.0.1-SNAPSHOT</version>\r\n  <build>\r\n  \r\n    <sourceDirectory>src</sourceDirectory>\r\n    <plugins>\r\n      <plugin>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.8.0</version>\r\n        <configuration>\r\n          <source>1.8</source>\r\n          <target>1.8</target>\r\n        </configuration>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n  \r\n  <dependencies>\r\n        <dependency>\r\n            <groupId>edu.stanford.nlp</groupId>\r\n            <artifactId>stanford-corenlp</artifactId>\r\n            <version>3.9.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>edu.stanford.nlp</groupId>\r\n            <artifactId>stanford-corenlp</artifactId>\r\n            <version>3.9.2</version>\r\n            <classifier>models</classifier>\r\n        </dependency>\r\n        \r\n          <dependency>\r\n        <groupId>org.knowm.xchart</groupId>\r\n        <artifactId>xchart</artifactId>\r\n        <version>3.6.2</version>\r\n    </dependency>\r\n    \r\n    <dependency>\r\n    <groupId>de.erichseifert.vectorgraphics2d</groupId>\r\n    <artifactId>VectorGraphics2D</artifactId>\r\n    <version>0.13</version>\r\n</dependency>\r\n    \r\n    <dependency>\r\n<groupId>junit</groupId>\r\n<artifactId>junit</artifactId>\r\n<version>4.12</version>\r\n<scope>test</scope>\r\n</dependency>\r\n      <dependency>\r\n          <groupId>junit</groupId>\r\n          <artifactId>junit</artifactId>\r\n          <version>4.12</version>\r\n          <scope>compile</scope>\r\n      </dependency>\r\n      <dependency>\r\n          <groupId>org.junit.jupiter</groupId>\r\n          <artifactId>junit-jupiter</artifactId>\r\n          <version>5.4.2</version>\r\n          <scope>compile</scope>\r\n      </dependency>\r\n      \r\n      <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-nop -->\r\n<dependency>\r\n    <groupId>org.slf4j</groupId>\r\n    <artifactId>slf4j-nop</artifactId>\r\n    <version>2.0.0-alpha1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n\r\n  </dependencies>\r\n        \r\n        \r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision 620b992fdba8fb66f86b05e03d27e1a848abdbe0)
+++ pom.xml	(date 1587689030912)
@@ -72,6 +72,7 @@
     <scope>test</scope>
 </dependency>
 
+
   </dependencies>
         
         
Index: src/RawDocumentReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\r\nimport java.util.*;\r\nimport edu.stanford.nlp.pipeline.CoreDocument;\r\nimport edu.stanford.nlp.pipeline.StanfordCoreNLP;\r\n\r\n\r\n/**\r\n * Reads in articles and outputs file with relevant metrics.\r\n */\r\npublic class RawDocumentReader {\r\n    File fileToOpen;\r\n    File fileToWrite = new File (\"articleMetricsArray.ser\");\r\n  \r\n    String stopWordsPath = \"stopWords.txt\";\r\n    ArrayList<String[]> fileArray = new ArrayList<>();\r\n    int idxTitle = 2, idxArticle = 3, idxSource = 0, idxDate = 4, idxAuthor = 1;\r\n    Properties prop = new Properties();\r\n    StanfordCoreNLP pipeline = new StanfordCoreNLP(property());\r\n\r\n    public RawDocumentReader(String FileName) {\r\n    \tFile rawFile = new File(FileName);\r\n    \tthis.fileToOpen = rawFile;\r\n        constructFileArray(fileToOpen);\r\n        constructMetrics();\r\n\r\n    }\r\n\r\n  \r\n\r\n\t/**\r\n     * Set properties for CoreNLP\r\n     * @return used to build nlp pipeline\r\n     */\r\n    private Properties property(){\r\n        prop.setProperty(\"annotators\", \"tokenize, ssplit, pos, lemma, parse, ner, sentiment\");\r\n        return prop;\r\n    }\r\n\r\n    /**\r\n     * Read articles from file into an array\r\n     * @param file\r\n     */\r\n    private void constructFileArray(File file) {\r\n        try {\r\n            Scanner fileInput = new Scanner(file);\r\n            fileInput.useDelimiter(\"(Z1Q\\\")|(Z1Q)\");\r\n\r\n            //File to Array\r\n            while (fileInput.hasNext()) {\r\n                String[] rawText = fileInput.next().split(\"(,Q1Z)|(,\\\"Q1Z)\");\r\n                fileArray.add(rawText);\r\n            }\r\n        } catch (FileNotFoundException e) {\r\n            System.out.println(\"Document not found. Please ensure that your CSV file is located in the correct directors\\n \"\r\n            \t\t+ \"and that you are inputting the correct file and path into the constructor. \");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Read stop words from file into arraylist.\r\n     */\r\n    private ArrayList<String> constructStopWordsArray(String fileName) {\r\n        ArrayList<String> stopWords = new ArrayList<>();\r\n        File file = new File(fileName);\r\n\r\n        try(Scanner userFile = new Scanner(file)) {\r\n            userFile.useDelimiter(\"\\\\n\");\r\n            while (userFile.hasNext()){\r\n                stopWords.add(userFile.next().trim());\r\n            }\r\n\r\n        } catch (FileNotFoundException e) {\r\n            System.out.println(\"Could not find stop words file. Please make sure that the file exists. \");\r\n        }\r\n\r\n        return stopWords;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Read articles from arraylist and produce metrics.\r\n     */\r\n    private void constructMetrics() {\r\n        ArrayList<Article> arrayOfArticles = new ArrayList<>();\r\n        ArrayList<String> stopWords = constructStopWordsArray(stopWordsPath);\r\n        int loopCounter = 1;\r\n        for (String[] row : fileArray) {\r\n//            row[idxArticle] = cleanArticle(row[idxArticle]);\r\n            CoreDocument document = null;\r\n            try {\r\n                row[idxArticle] = row[idxArticle].toLowerCase();\r\n                document = new CoreDocument(row[idxArticle]);\r\n            } catch (Exception e) {\r\n                System.out.println(\"There is not a \" + loopCounter + \"th row to process. The .csv has been fully read.\");\r\n                continue;\r\n            }\r\n            pipeline.annotate(document);\r\n            \r\n            System.out.println(\"Working on Article: \" + loopCounter);\r\n//            if (loopCounter > 5) break;\r\n            loopCounter++;\r\n\r\n            Article article = new Article(row[idxSource], row[idxTitle], row[idxAuthor], row[idxDate], document, stopWords);\r\n            arrayOfArticles.add(article);\r\n        }\r\n\r\n        arrayOfArticles.sort(null);\r\n        storeArray(arrayOfArticles, fileToWrite);\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n\t/**\r\n     * Output Arraylist to file for persistence.\r\n     */\r\n    private void storeArray(ArrayList<Article> arrayToWrite, File outputFile){\r\n        try{\r\n            FileOutputStream writeData = new FileOutputStream(outputFile);\r\n            ObjectOutputStream writeStream = new ObjectOutputStream(writeData);\r\n\r\n            writeStream.writeObject(arrayToWrite);\r\n            writeStream.flush();\r\n            writeStream.close();\r\n\r\n        }catch (IOException e) {\r\n            e.printStackTrace();\r\n            System.out.println(\"Error writing ArrayList to disk\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read stored ArrayList back into memory\r\n     */\r\n    public ArrayList<Article> readArray(String arrayFileName){\r\n        ArrayList<Article> data = new ArrayList<>();\r\n        try{\r\n            FileInputStream readData = new FileInputStream(arrayFileName);\r\n            ObjectInputStream readStream = new ObjectInputStream(readData);\r\n\r\n            data = (ArrayList<Article>) readStream.readObject();\r\n            readStream.close();\r\n\r\n\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n            System.out.println(\"Error reading ArrayList into memory\");\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        RawDocumentReader rdr = new RawDocumentReader(\"newsSourcesSAMPLED100.csv\");\r\n        \r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/RawDocumentReader.java	(revision 620b992fdba8fb66f86b05e03d27e1a848abdbe0)
+++ src/RawDocumentReader.java	(date 1587689030927)
@@ -41,6 +41,7 @@
      * @param file
      */
     private void constructFileArray(File file) {
+        System.out.println("Processing " + file.toString() + "...") ;
         try {
             Scanner fileInput = new Scanner(file);
             fileInput.useDelimiter("(Z1Q\")|(Z1Q)");
Index: .idea/libraries/Maven__org_slf4j_slf4j_nop_2_0_0_alpha1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/Maven__org_slf4j_slf4j_nop_2_0_0_alpha1.xml	(date 1587689030952)
+++ .idea/libraries/Maven__org_slf4j_slf4j_nop_2_0_0_alpha1.xml	(date 1587689030952)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-nop:2.0.0-alpha1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-nop/2.0.0-alpha1/slf4j-nop-2.0.0-alpha1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-nop/2.0.0-alpha1/slf4j-nop-2.0.0-alpha1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-nop/2.0.0-alpha1/slf4j-nop-2.0.0-alpha1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM__Default_Changelist_.xml	(date 1587934907054)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM__Default_Changelist_.xml	(date 1587934907054)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM_[Default_Changelist]" date="1587689031157" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/23/2020 7:43 PM [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: Team153.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: edu.stanford.nlp:stanford-corenlp:3.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.apple:AppleJavaExtensions:1.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: de.jollyday:jollyday:0.4.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-lang3:3.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-queryparser:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-sandbox:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-analyzers-common:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-queries:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-core:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.servlet:javax.servlet-api:3.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.io7m.xom:xom:1.2.10\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: xml-apis:xml-apis:1.3.03\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: xerces:xercesImpl:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: xalan:xalan:2.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: joda-time:joda-time:2.9.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.googlecode.efficient-java-matrix-library:ejml:0.23\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish:javax.json:1.0.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.protobuf:protobuf-java:3.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.activation:javax.activation-api:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.xml.bind:jaxb-api:2.4.0-b180830.0359\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.xml.bind:jaxb-core:2.3.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: edu.stanford.nlp:stanford-corenlp:models:3.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.knowm.xchart:xchart:3.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: de.rototor.pdfbox:graphics2d:0.25\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:pdfbox:2.0.17\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:fontbox:2.0.17\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-logging:commons-logging:1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.madgag:animated-gif-lib:1.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: de.erichseifert.vectorgraphics2d:VectorGraphics2D:0.13\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apiguardian:apiguardian-api:1.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.opentest4j:opentest4j:1.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.platform:junit-platform-commons:1.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.platform:junit-platform-engine:1.4.2\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Team153.iml	(revision 620b992fdba8fb66f86b05e03d27e1a848abdbe0)
+++ Team153.iml	(date 1587689030932)
@@ -50,5 +50,6 @@
     <orderEntry type="library" name="Maven: org.junit.jupiter:junit-jupiter-params:5.4.2" level="project" />
     <orderEntry type="library" scope="RUNTIME" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.4.2" level="project" />
     <orderEntry type="library" scope="RUNTIME" name="Maven: org.junit.platform:junit-platform-engine:1.4.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.slf4j:slf4j-nop:2.0.0-alpha1" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM_[Default_Changelist]/shelved.patch	(date 1587689029742)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_4_23_2020_7_43_PM_[Default_Changelist]/shelved.patch	(date 1587689029742)
@@ -0,0 +1,73 @@
+Index: pom.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" \r\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>stanford-coreNLP</groupId>\r\n  <artifactId>Team153</artifactId>\r\n  <version>0.0.1-SNAPSHOT</version>\r\n  <build>\r\n  \r\n    <sourceDirectory>src</sourceDirectory>\r\n    <plugins>\r\n      <plugin>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.8.0</version>\r\n        <configuration>\r\n          <source>1.8</source>\r\n          <target>1.8</target>\r\n        </configuration>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n  \r\n  <dependencies>\r\n        <dependency>\r\n            <groupId>edu.stanford.nlp</groupId>\r\n            <artifactId>stanford-corenlp</artifactId>\r\n            <version>3.9.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>edu.stanford.nlp</groupId>\r\n            <artifactId>stanford-corenlp</artifactId>\r\n            <version>3.9.2</version>\r\n            <classifier>models</classifier>\r\n        </dependency>\r\n        \r\n          <dependency>\r\n        <groupId>org.knowm.xchart</groupId>\r\n        <artifactId>xchart</artifactId>\r\n        <version>3.6.2</version>\r\n    </dependency>\r\n    \r\n    <dependency>\r\n    <groupId>de.erichseifert.vectorgraphics2d</groupId>\r\n    <artifactId>VectorGraphics2D</artifactId>\r\n    <version>0.13</version>\r\n</dependency>\r\n    \r\n    <dependency>\r\n<groupId>junit</groupId>\r\n<artifactId>junit</artifactId>\r\n<version>4.12</version>\r\n<scope>test</scope>\r\n</dependency>\r\n      <dependency>\r\n          <groupId>junit</groupId>\r\n          <artifactId>junit</artifactId>\r\n          <version>4.12</version>\r\n          <scope>compile</scope>\r\n      </dependency>\r\n      <dependency>\r\n          <groupId>org.junit.jupiter</groupId>\r\n          <artifactId>junit-jupiter</artifactId>\r\n          <version>5.4.2</version>\r\n          <scope>compile</scope>\r\n      </dependency>\r\n      \r\n      <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-nop -->\r\n<dependency>\r\n    <groupId>org.slf4j</groupId>\r\n    <artifactId>slf4j-nop</artifactId>\r\n    <version>2.0.0-alpha1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n\r\n  </dependencies>\r\n        \r\n        \r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- pom.xml	(revision b90ae6b38118e9cf1d2ba1cb3ee1198651b32964)
++++ pom.xml	(date 1587612668427)
+@@ -72,6 +72,7 @@
+     <scope>test</scope>
+ </dependency>
+ 
++
+   </dependencies>
+         
+         
+Index: src/RawDocumentReader.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>import java.io.*;\r\nimport java.util.*;\r\nimport edu.stanford.nlp.pipeline.CoreDocument;\r\nimport edu.stanford.nlp.pipeline.StanfordCoreNLP;\r\n\r\n\r\n/**\r\n * Reads in articles and outputs file with relevant metrics.\r\n */\r\npublic class RawDocumentReader {\r\n    File fileToOpen;\r\n    File fileToWrite = new File (\"articleMetricsArray.ser\");\r\n  \r\n    String stopWordsPath = \"stopWords.txt\";\r\n    ArrayList<String[]> fileArray = new ArrayList<>();\r\n    int idxTitle = 2, idxArticle = 3, idxSource = 0, idxDate = 4, idxAuthor = 1;\r\n    Properties prop = new Properties();\r\n    StanfordCoreNLP pipeline = new StanfordCoreNLP(property());\r\n\r\n    public RawDocumentReader(String FileName) {\r\n    \tFile rawFile = new File(FileName);\r\n    \tthis.fileToOpen = rawFile;\r\n        constructFileArray(fileToOpen);\r\n        constructMetrics();\r\n\r\n    }\r\n\r\n  \r\n\r\n\t/**\r\n     * Set properties for CoreNLP\r\n     * @return used to build nlp pipeline\r\n     */\r\n    private Properties property(){\r\n        prop.setProperty(\"annotators\", \"tokenize, ssplit, pos, lemma, parse, ner, sentiment\");\r\n        return prop;\r\n    }\r\n\r\n    /**\r\n     * Read articles from file into an array\r\n     * @param file\r\n     */\r\n    private void constructFileArray(File file) {\r\n        try {\r\n            Scanner fileInput = new Scanner(file);\r\n            fileInput.useDelimiter(\"(Z1Q\\\")|(Z1Q)\");\r\n\r\n            //File to Array\r\n            while (fileInput.hasNext()) {\r\n                String[] rawText = fileInput.next().split(\"(,Q1Z)|(,\\\"Q1Z)\");\r\n                fileArray.add(rawText);\r\n            }\r\n        } catch (FileNotFoundException e) {\r\n            System.out.println(\"Document not found. Please ensure that your CSV file is located in the correct directors\\n \"\r\n            \t\t+ \"and that you are inputting the correct file and path into the constructor. \");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Read stop words from file into arraylist.\r\n     */\r\n    private ArrayList<String> constructStopWordsArray(String fileName) {\r\n        ArrayList<String> stopWords = new ArrayList<>();\r\n        File file = new File(fileName);\r\n\r\n        try(Scanner userFile = new Scanner(file)) {\r\n            userFile.useDelimiter(\"\\\\n\");\r\n            while (userFile.hasNext()){\r\n                stopWords.add(userFile.next().trim());\r\n            }\r\n\r\n        } catch (FileNotFoundException e) {\r\n            System.out.println(\"Could not find stop words file. Please make sure that the file exists. \");\r\n        }\r\n\r\n        return stopWords;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Read articles from arraylist and produce metrics.\r\n     */\r\n    private void constructMetrics() {\r\n        ArrayList<Article> arrayOfArticles = new ArrayList<>();\r\n        ArrayList<String> stopWords = constructStopWordsArray(stopWordsPath);\r\n        int loopCounter = 1;\r\n        for (String[] row : fileArray) {\r\n//            row[idxArticle] = cleanArticle(row[idxArticle]);\r\n            CoreDocument document = null;\r\n            try {\r\n                row[idxArticle] = row[idxArticle].toLowerCase();\r\n                document = new CoreDocument(row[idxArticle]);\r\n            } catch (Exception e) {\r\n                System.out.println(\"There is not a \" + loopCounter + \"th row to process. The .csv has been fully read.\");\r\n                continue;\r\n            }\r\n            pipeline.annotate(document);\r\n            \r\n            System.out.println(\"Working on Article: \" + loopCounter);\r\n//            if (loopCounter > 5) break;\r\n            loopCounter++;\r\n\r\n            Article article = new Article(row[idxSource], row[idxTitle], row[idxAuthor], row[idxDate], document, stopWords);\r\n            arrayOfArticles.add(article);\r\n        }\r\n\r\n        arrayOfArticles.sort(null);\r\n        storeArray(arrayOfArticles, fileToWrite);\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n\t/**\r\n     * Output Arraylist to file for persistence.\r\n     */\r\n    private void storeArray(ArrayList<Article> arrayToWrite, File outputFile){\r\n        try{\r\n            FileOutputStream writeData = new FileOutputStream(outputFile);\r\n            ObjectOutputStream writeStream = new ObjectOutputStream(writeData);\r\n\r\n            writeStream.writeObject(arrayToWrite);\r\n            writeStream.flush();\r\n            writeStream.close();\r\n\r\n        }catch (IOException e) {\r\n            e.printStackTrace();\r\n            System.out.println(\"Error writing ArrayList to disk\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read stored ArrayList back into memory\r\n     */\r\n    public ArrayList<Article> readArray(String arrayFileName){\r\n        ArrayList<Article> data = new ArrayList<>();\r\n        try{\r\n            FileInputStream readData = new FileInputStream(arrayFileName);\r\n            ObjectInputStream readStream = new ObjectInputStream(readData);\r\n\r\n            data = (ArrayList<Article>) readStream.readObject();\r\n            readStream.close();\r\n\r\n\r\n        }catch (Exception e) {\r\n            e.printStackTrace();\r\n            System.out.println(\"Error reading ArrayList into memory\");\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        RawDocumentReader rdr = new RawDocumentReader(\"newsSourcesSAMPLED100.csv\");\r\n        \r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/RawDocumentReader.java	(revision b90ae6b38118e9cf1d2ba1cb3ee1198651b32964)
++++ src/RawDocumentReader.java	(date 1587612197315)
+@@ -41,6 +41,7 @@
+      * @param file
+      */
+     private void constructFileArray(File file) {
++        System.out.println("Processing " + file.toString() + "...") ;
+         try {
+             Scanner fileInput = new Scanner(file);
+             fileInput.useDelimiter("(Z1Q\")|(Z1Q)");
+Index: Team153.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: edu.stanford.nlp:stanford-corenlp:3.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.apple:AppleJavaExtensions:1.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: de.jollyday:jollyday:0.4.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-lang3:3.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-queryparser:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-sandbox:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-analyzers-common:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-queries:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.lucene:lucene-core:4.10.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.servlet:javax.servlet-api:3.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.io7m.xom:xom:1.2.10\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: xml-apis:xml-apis:1.3.03\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: xerces:xercesImpl:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: xalan:xalan:2.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: joda-time:joda-time:2.9.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.googlecode.efficient-java-matrix-library:ejml:0.23\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish:javax.json:1.0.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.protobuf:protobuf-java:3.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.activation:javax.activation-api:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.xml.bind:jaxb-api:2.4.0-b180830.0359\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.xml.bind:jaxb-core:2.3.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: edu.stanford.nlp:stanford-corenlp:models:3.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.knowm.xchart:xchart:3.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: de.rototor.pdfbox:graphics2d:0.25\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:pdfbox:2.0.17\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:fontbox:2.0.17\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-logging:commons-logging:1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.madgag:animated-gif-lib:1.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: de.erichseifert.vectorgraphics2d:VectorGraphics2D:0.13\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apiguardian:apiguardian-api:1.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.opentest4j:opentest4j:1.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.platform:junit-platform-commons:1.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.4.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.platform:junit-platform-engine:1.4.2\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- Team153.iml	(revision b90ae6b38118e9cf1d2ba1cb3ee1198651b32964)
++++ Team153.iml	(date 1587611951435)
+@@ -50,5 +50,6 @@
+     <orderEntry type="library" name="Maven: org.junit.jupiter:junit-jupiter-params:5.4.2" level="project" />
+     <orderEntry type="library" scope="RUNTIME" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.4.2" level="project" />
+     <orderEntry type="library" scope="RUNTIME" name="Maven: org.junit.platform:junit-platform-engine:1.4.2" level="project" />
++    <orderEntry type="library" scope="TEST" name="Maven: org.slf4j:slf4j-nop:2.0.0-alpha1" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: .idea/libraries/Maven__org_slf4j_slf4j_nop_2_0_0_alpha1.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- .idea/libraries/Maven__org_slf4j_slf4j_nop_2_0_0_alpha1.xml	(date 1587611951445)
++++ .idea/libraries/Maven__org_slf4j_slf4j_nop_2_0_0_alpha1.xml	(date 1587611951445)
+@@ -0,0 +1,13 @@
++<component name="libraryTable">
++  <library name="Maven: org.slf4j:slf4j-nop:2.0.0-alpha1">
++    <CLASSES>
++      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-nop/2.0.0-alpha1/slf4j-nop-2.0.0-alpha1.jar!/" />
++    </CLASSES>
++    <JAVADOC>
++      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-nop/2.0.0-alpha1/slf4j-nop-2.0.0-alpha1-javadoc.jar!/" />
++    </JAVADOC>
++    <SOURCES>
++      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-nop/2.0.0-alpha1/slf4j-nop-2.0.0-alpha1-sources.jar!/" />
++    </SOURCES>
++  </library>
++</component>
+\ No newline at end of file
diff --git Summary.txt ../Summary.txt
rename from Summary.txt
rename to ../Summary.txt
